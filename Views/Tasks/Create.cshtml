@model TaskManagementProject.Models.Task

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "Assigned", Value = "Assigned" },
                                    new SelectListItem { Text = "Started", Value = "Started" },
                                    new SelectListItem { Text = "Ongoing", Value = "Ongoing" },
                                    new SelectListItem { Text = "Complete", Value = "Complete" }
                                }, "Select Status", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.ProjectFid, "Project", htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.DropDownList("ProjectFid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProjectFid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.UserFid, "Assigned To", htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.DropDownList("UserFid", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserFid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "col-md-3 col-form-label text-md-right text-primary" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-9 offset-md-3">
                                <button type="submit" class="btn btn-primary">Create</button>
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    /* Custom CSS for form styling */
    .form-group {
        margin-bottom: 20px;
    }

    .text-primary {
        color: #007bff; /* Bootstrap primary color */
    }
</style>
